Given a collection of numbers that might contain duplicates,

return all possible unique permutations.

For example,
[1,1,2] have the following unique permutations:
[
  [1,1,2],
  [1,2,1],
  [2,1,1]
]

代码和解析

这里采用了递归的思路。避免重复的核心思路在于，使用一个boolean数组来代表当前的数值是否已经被使用过。

当前的值如果已经被使用过，则继续判断下一个数值。

如果当前的值为重复值，则只要前面的值没有被使用过，则当前值就不可以被使用。

这样确保了只有第一个出现的重复值可以算进结果集，后序重复的情况不会被添加进结果集。

例如，假设输入的数组为[1，1，2]。则当第一个1被添加进结果集时，可以继续使用第二个1作为元素添加进结果集从而生成112。

同理，当试图将第二个1作为第一个元素添加进结果集时，只要第一个1还没有被使用过，则不可以使用第二个1。

因此，112不会被重复的添加进结果集。

其实，这个算法保证了所有重复的数字在结果集中的顺序和在原输入数组中的顺序是相同的。

假设将[1,1,2]表示为[1,1#,2],那么结果集中会确保1永远在数值1#的前面，从而避免了11#2和1#12的重复情况出现。