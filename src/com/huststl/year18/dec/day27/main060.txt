一、问题描述
The set [1,2,3,…,n] contains a total of n! unique permutations.

By listing and labeling all of the permutations in order,
We get the following sequence (ie, for n = 3):

"123"
"132"
"213"
"231"
"312"
"321"
Given n and k, return the kth permutation sequence.

Note: Given n will be between 1 and 9 inclusive.

二、问题分析
参考的http://blog.csdn.net/linhuanmars/article/details/22028697
我们知道，n个数的permutation总共有n阶乘个，基于这个性质我们可以得到某一位对应的数字是哪一个。

思路是这样的，比如当前长度是n，我们知道每个相同的起始元素对应(n-1)!个permutation，

也就是(n-1)!个permutation后会换一个起始元素。因此，只要当前的k进行(n-1)!取余，

得到的数字就是当前剩余数组的index，如此就可以得到对应的元素。如此递推直到数组中没有元素结束。

实现中我们要维护一个数组来记录当前的元素，每次得到一个元素加入结果数组，

然后从剩余数组中移除，因此空间复杂度是O(n)。时间上总共需要n个回合，

而每次删除元素如果是用数组需要O(n),所以总共是O(n^2)。
-