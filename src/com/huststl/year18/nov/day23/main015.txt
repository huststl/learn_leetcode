[LeetCode] 3Sum 三数之和


Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0?

Find all unique triplets in the array which gives the sum of zero.

Note:

Elements in a triplet (a,b,c) must be in non-descending order. (ie, a ≤ b ≤ c)
The solution set must not contain duplicate triplets.


    For example, given array S = {-1 0 1 2 -1 -4},

    A solution set is:
    (-1, 0, 1)
    (-1, -1, 2)

2. 题目要求

数组S = nums[n]包含n个整数，请问S中是否存在a，b，c三个整数，使得a+b+c=0。找出所有满足该条件的三元组，且不包含重复三元组。

3. 解题思路

首先对数组进行排序

思路一：三层for循环暴力解决，同时考虑过滤重复，时间复杂度为O(n3)

思路二：时间复杂度为O(n2)，外面一层for循环，以每个元素 nums[i] 作为三元组重的一个元素，

然后从剩余的元素中找出二者之和满足0-nums[i]的两个元素。通过一层while循环，

从剩余所有元素的首位两个元素开始找，不断向中间逼近。

过滤重复：因为已经对数组进行排序，所以相同的整数一定会连在一起。

当使用for循环进行遍历时，如果当前指向元素 nums[i] 与 nums[i-1]相同，

则可跳出本次循环，执行 i++，从而达到过滤重复的目的。